@use '../../styles/variables.scss' as *;

.projects {
  background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 50%, #e2e8f0 100%);
  position: relative;
  width: 100vw;
  overflow: hidden;
  padding: 6rem 0;
  
  // Enhanced background effects
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      radial-gradient(circle at 20% 80%, rgba(79, 140, 255, 0.05) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(79, 140, 255, 0.04) 0%, transparent 50%),
      radial-gradient(circle at 40% 60%, rgba(79, 140, 255, 0.03) 0%, transparent 50%);
    pointer-events: none;
    z-index: 1;
    animation: backgroundPulse 8s ease-in-out infinite;
  }
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: 
      linear-gradient(45deg, transparent 0%, rgba(79, 140, 255, 0.02) 50%, transparent 100%),
      linear-gradient(-45deg, transparent 0%, rgba(79, 140, 255, 0.02) 50%, transparent 100%);
    pointer-events: none;
    z-index: 2;
    animation: backgroundShift 12s ease-in-out infinite;
  }
  
  @media (max-width: 900px) {
    padding: 4rem 0;
  }
  
  @media (max-width: 600px) {
    padding: 3rem 0;
  }
}

@keyframes backgroundPulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

@keyframes backgroundShift {
  0%, 100% { 
    transform: translateX(0) translateY(0) rotate(0deg);
    opacity: 1;
  }
  25% { 
    transform: translateX(10px) translateY(-5px) rotate(0.5deg);
    opacity: 0.8;
  }
  50% { 
    transform: translateX(-5px) translateY(5px) rotate(-0.5deg);
    opacity: 0.9;
  }
  75% { 
    transform: translateX(5px) translateY(-2px) rotate(0.2deg);
    opacity: 0.85;
  }
}

// Background Animation Components
.backgroundAnimations {
  position: absolute;
  inset: 0;
  z-index: 1;
  pointer-events: none;
  overflow: hidden;
}

.floatingElements {
  position: absolute;
  inset: 0;
  z-index: 2;
}

.floatingElement {
  position: absolute;
  font-family: $font-mono;
  font-size: 1.5rem;
  font-weight: 600;
  color: rgba(79, 140, 255, 0.2);
  will-change: transform;
  backface-visibility: hidden;
  
  @media (max-width: 768px) {
    font-size: 1.2rem;
  }
}

.codeRain {
  position: absolute;
  inset: 0;
  z-index: 1;
}

.codeColumn {
  position: absolute;
  top: 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  font-family: $font-mono;
  font-size: 0.9rem;
  font-weight: 500;
  color: rgba(79, 140, 255, 0.15);
  
  @media (max-width: 768px) {
    font-size: 0.8rem;
    gap: 0.8rem;
  }
}

.codeText {
  display: block;
  line-height: 1.2;
  opacity: 0.8;
}

.particleSystem {
  position: absolute;
  inset: 0;
  z-index: 2;
}

.particle {
  position: absolute;
  width: 3px;
  height: 3px;
  background: rgba(79, 140, 255, 0.4);
  border-radius: 50%;
  box-shadow: 0 0 6px rgba(79, 140, 255, 0.3);
  
  &::before {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    background: rgba(79, 140, 255, 0.2);
    border-radius: 50%;
    animation: particleGlow 2s ease-in-out infinite alternate;
  }
}

@keyframes particleGlow {
  0% { 
    transform: scale(0.8);
    opacity: 0.4;
  }
  100% { 
    transform: scale(1.2);
    opacity: 0.8;
  }
}

.container {
  position: relative;
  z-index: 3;
}

// Enhanced Panoramic Carousel Styles
.panoramaContainer {
  position: relative;
  width: 100%;
  height: 400px;
  padding: 0;
  overflow: hidden;
  border-radius: 20px;
  box-shadow: 
    0 4px 20px rgba(79, 140, 255, 0.15),
    0 8px 40px rgba(79, 140, 255, 0.08);
  transition: box-shadow 0.3s ease;
  perspective: 1000px;
  
  &:hover {
    box-shadow: 
      0 8px 30px rgba(79, 140, 255, 0.2),
      0 16px 60px rgba(79, 140, 255, 0.12);
  }
  
  // Fixed dark gradient overlay - mais escuro e consistente
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.4) 0%,
      rgba(0, 0, 0, 0.1) 25%,
      rgba(0, 0, 0, 0.1) 75%,
      rgba(0, 0, 0, 0.5) 100%
    );
    z-index: 10;
    pointer-events: none;
    transform: translateZ(0); // Force hardware acceleration
    will-change: auto; // Remove will-change to avoid repaints
  }
  
  @media (max-width: 900px) {
    height: 340px;
    border-radius: 14px;
  }
  
  @media (max-width: 600px) {
    height: 260px;
    border-radius: 8px;
  }
}

.panoramaTrack {
  display: flex;
  height: 100%;
  transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  will-change: transform;
}

.panoramaSlide {
  flex: 0 0 auto;
  height: 100%;
  position: relative;
  width: 100%;
  min-height: 400px;
  display: flex;
  align-items: center;
  justify-content: center;
  will-change: transform;
  backface-visibility: hidden;
  
  @media (max-width: 900px) {
    min-height: 340px;
  }
  @media (max-width: 600px) {
    min-height: 260px;
  }
}

.slideImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  transition: transform 0.3s ease;
  border-radius: 20px;
  // Performance optimizations
  transform: translateZ(0); // Force hardware acceleration
  will-change: transform;
  backface-visibility: hidden;
  
  @media (max-width: 900px) {
    border-radius: 14px;
  }
  @media (max-width: 600px) {
    border-radius: 8px;
  }
  
  // Parallax effect reduzido para melhor performance
  &:hover {
    transform: scale(1.02) translateZ(0);
  }
}

.slideContent {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-end;
  min-height: 100%;
  padding: 2.5rem 2.5rem 2.5rem 2.5rem;
  box-sizing: border-box;
  z-index: 5;
  overflow: visible;
  max-width: 700px;
  margin-left: 0;
  margin-right: auto;
  @media (max-width: 900px) {
    padding: 1.3rem 1.2rem 1.2rem 1.2rem;
    max-width: 95vw;
  }
  @media (max-width: 600px) {
    padding: 0.7rem 0.6rem 0.8rem 0.6rem;
    max-width: 99vw;
  }
}

.slideContentBg {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: -1;
  pointer-events: none;
  border-radius: 0 0 20px 20px;
  background: linear-gradient(90deg, 
    rgba(0, 0, 0, 0.85) 0%, 
    rgba(0, 0, 0, 0.7) 50%, 
    rgba(0, 0, 0, 0.3) 80%,
    transparent 100%
  );
}

.slideTitle {
  font-size: clamp(2rem, 5vw, 2.8rem);
  font-weight: 800;
  margin-bottom: 0.5rem;
  color: #ffffff;
  text-shadow: 0 2px 16px rgba(0,0,0,0.8);
  letter-spacing: -0.5px;
  line-height: 1.1;
  text-align: left;
  word-break: break-word;
  @media (max-width: 900px) {
    font-size: 1.5rem;
    margin-bottom: 0.3rem;
  }
  @media (max-width: 600px) {
    font-size: 1.1rem;
    margin-bottom: 0.2rem;
  }
}

.slideDescription {
  font-size: clamp(1.05rem, 2.5vw, 1.18rem);
  line-height: 1.6;
  opacity: 0.96;
  margin-bottom: 1.2rem;
  max-width: 600px;
  color: rgba(255, 255, 255, 0.9);
  text-shadow: 0 2px 10px rgba(0,0,0,0.8);
  font-weight: 400;
  word-break: break-word;
  @media (max-width: 900px) {
    font-size: 0.98rem;
    margin-bottom: 0.7rem;
    max-width: 95vw;
  }
  @media (max-width: 600px) {
    font-size: 0.85rem;
    margin-bottom: 0.5rem;
    max-width: 99vw;
  }
}

.slideTags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 1.2rem;
  @media (max-width: 900px) {
    gap: 0.3rem;
    margin-bottom: 0.7rem;
  }
  @media (max-width: 600px) {
    gap: 0.2rem;
    margin-bottom: 0.4rem;
  }
}

.slideTag {
  background: rgba(0, 0, 0, 0.7);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.2);
  font-weight: 500;
  @media (max-width: 900px) {
    font-size: 0.7rem;
    padding: 0.18rem 0.5rem;
  }
  @media (max-width: 600px) {
    font-size: 0.62rem;
    padding: 0.12rem 0.32rem;
  }
}

.slideLinks {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin-top: 0.5rem;
  flex-wrap: wrap;
  @media (max-width: 900px) {
    gap: 0.5rem;
    margin-top: 0.2rem;
  }
  @media (max-width: 600px) {
    gap: 0.2rem;
    margin-top: 0.1rem;
  }
}

.slideLink {
  background: rgba($color-primary, 0.9);
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 25px;
  text-decoration: none;
  font-weight: 500;
  font-size: 0.9rem;
  transition: all 0.3s ease;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(79, 140, 255, 0.2);
  
  &:hover {
    background: rgba($color-primary, 1);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba($color-primary, 0.4);
  }
  @media (max-width: 900px) {
    font-size: 0.8rem;
    padding: 0.35rem 0.7rem;
  }
  @media (max-width: 600px) {
    font-size: 0.7rem;
    padding: 0.22rem 0.45rem;
  }
}

// Enhanced Navigation
.panoramaNavigation {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 1rem;
  right: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 30;
  pointer-events: none;
}

.navButton {
  background: rgba(0, 0, 0, 0.8);
  border: none;
  color: rgba(255, 255, 255, 0.9);
  font-size: 1.5rem;
  font-weight: 700;
  cursor: pointer;
  padding: 0.8rem;
  border-radius: 50%;
  transition: all 0.2s ease; // Reduzido para melhor performance
  pointer-events: all;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.4);
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  // Performance optimizations
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;
  
  svg {
    width: 20px;
    height: 20px;
    stroke-width: 2;
  }
  
  &:hover {
    background: rgba(0, 0, 0, 0.9);
    color: $color-primary;
    transform: scale(1.05) translateZ(0); // Reduzido o scale
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.6);
  }
  
  &:active {
    transform: scale(0.98) translateZ(0); // Otimizado
  }
  
  @media (max-width: 600px) {
    width: 40px;
    height: 40px;
    padding: 0.6rem;
    
    svg {
      width: 16px;
      height: 16px;
    }
  }
}

.panoramaNavigationBottom {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 1.2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  z-index: 30;
  pointer-events: none;
}

.navButtonBottom {
  background: none;
  border: none;
  color: $color-primary;
  font-size: 2.2rem;
  font-weight: 700;
  cursor: pointer;
  padding: 0.2rem 1.2rem;
  border-radius: 8px;
  transition: background 0.2s, color 0.2s, transform 0.2s;
  pointer-events: all;
  &:hover {
    background: rgba($color-primary, 0.1);
    color: rgba(79, 140, 255, 0.8);
    transform: translateY(-2px) scale(1.08);
  }
  &:active {
    transform: scale(0.96);
  }
}

// Enhanced Pagination dots
.panoramaPagination {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 0.75rem;
  z-index: 20;
  
  @media (max-width: 600px) {
    bottom: 1.5rem;
    gap: 0.5rem;
  }
}

.paginationDot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: rgba(79, 140, 255, 0.3);
  cursor: pointer;
  transition: all 0.2s ease; // Reduzido para melhor performance
  border: 2px solid transparent;
  // Performance optimizations
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;
  
  &:hover {
    background: rgba(79, 140, 255, 0.5);
    transform: scale(1.15) translateZ(0); // Reduzido o scale
  }
  
  &.active {
    background: $color-primary;
    transform: scale(1.3) translateZ(0); // Reduzido o scale
    box-shadow: 0 0 20px rgba($color-primary, 0.6);
    border-color: rgba(79, 140, 255, 0.3);
  }
  
  @media (max-width: 600px) {
    width: 10px;
    height: 10px;
  }
}

// Transforming Ideas Section
.transformingSection {
  margin-top: 4rem;
  padding: 4rem 2rem;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 250, 252, 0.98) 100%);
  border-radius: 24px;
  box-shadow: 
    0 8px 40px rgba(79, 140, 255, 0.08),
    0 2px 16px rgba(79, 140, 255, 0.04);
  border: 1px solid rgba(79, 140, 255, 0.1);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, 
      #4f8cff 0%, 
      #7fb3ff 25%, 
      #4f8cff 50%, 
      #7fb3ff 75%, 
      #4f8cff 100%
    );
    animation: gradientShift 3s ease-in-out infinite;
  }
  
  @media (max-width: 1024px) {
    margin-top: 3rem;
    padding: 3rem 1.5rem;
    border-radius: 20px;
  }
  
  @media (max-width: 768px) {
    margin-top: 2.5rem;
    padding: 2.5rem 1rem;
    border-radius: 16px;
  }
  
  @media (max-width: 480px) {
    margin-top: 2rem;
    padding: 2rem 0.8rem;
    border-radius: 12px;
    margin-left: -1rem;
    margin-right: -1rem;
  }
  
  @media (max-width: 360px) {
    padding: 1.5rem 0.5rem;
    margin-left: -0.5rem;
    margin-right: -0.5rem;
  }
}

@keyframes gradientShift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.transformingContent {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 4rem;
  align-items: center;
  
  @media (max-width: 1024px) {
    gap: 3rem;
  }
  
  @media (max-width: 768px) {
    grid-template-columns: 1fr;
    gap: 2.5rem;
    text-align: center;
  }
  
  @media (max-width: 480px) {
    gap: 2rem;
  }
  
  @media (max-width: 360px) {
    gap: 1.5rem;
  }
}

.transformingText {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  
  @media (max-width: 768px) {
    gap: 1.2rem;
  }
  
  @media (max-width: 480px) {
    gap: 1rem;
  }
}

.transformingTitle {
  font-size: clamp(2.5rem, 5vw, 3.5rem);
  font-weight: 800;
  color: $color-text-dark;
  line-height: 1.1;
  letter-spacing: -0.02em;
  margin: 0;
  
  .highlight {
    background: linear-gradient(135deg, 
      $color-primary 0%, 
      #7fb3ff 50%, 
      $color-primary 100%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
    
    &::after {
      content: '';
      position: absolute;
      bottom: -4px;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, 
        transparent 0%, 
        $color-primary 50%, 
        transparent 100%
      );
      opacity: 0.3;
      animation: underlineGlow 2s ease-in-out infinite;
    }
  }
  
  @media (max-width: 768px) {
    text-align: center;
  }
}

@keyframes underlineGlow {
  0%, 100% { opacity: 0.3; transform: scaleX(0.8); }
  50% { opacity: 0.6; transform: scaleX(1.2); }
}

.transformingSubtitle {
  font-size: clamp(1rem, 2.5vw, 1.2rem);
  color: rgba(0, 0, 0, 0.7);
  line-height: 1.6;
  font-weight: 400;
  margin: 0;
  
  @media (max-width: 768px) {
    text-align: center;
  }
}

.transformingTagline {
  font-size: clamp(0.85rem, 2vw, 0.95rem);
  color: $color-primary;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin: 0;
  
  @media (max-width: 768px) {
    text-align: center;
  }
}

// Rubik's Cube Animation - Mecânica Real Simplificada
.cubeContainer {
  perspective: 1500px;
  width: 200px;
  height: 200px;
  position: relative;
  
  @media (max-width: 1024px) {
    width: 180px;
    height: 180px;
    perspective: 1300px;
  }
  
  @media (max-width: 768px) {
    width: 150px;
    height: 150px;
    margin: 0 auto;
    perspective: 1100px;
  }
  
  @media (max-width: 480px) {
    width: 120px;
    height: 120px;
    perspective: 900px;
  }
  
  @media (max-width: 360px) {
    width: 100px;
    height: 100px;
    perspective: 700px;
  }
}

.rubiksCube {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  animation: cubeFloat 6s ease-in-out infinite;
  
  &:hover {
    animation-play-state: paused;
  }
}

// Flutuação suave do cubo
@keyframes cubeFloat {
  0%, 100% { 
    transform: translateY(0px) rotateX(-15deg) rotateY(15deg);
  }
  50% { 
    transform: translateY(-10px) rotateX(-15deg) rotateY(15deg);
  }
}

.cubeFace {
  position: absolute;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 3px;
  padding: 6px;
  border-radius: 8px;
  
  @media (max-width: 768px) {
    gap: 2px;
    padding: 4px;
    border-radius: 6px;
  }
  
  @media (max-width: 480px) {
    gap: 1px;
    padding: 3px;
    border-radius: 4px;
  }
}

.cubeSquare {
  border-radius: 4px;
  border: 1px solid rgba(0, 0, 0, 0.15);
  position: relative;
  transition: all 0.3s ease;
  box-shadow: 
    inset 0 2px 4px rgba(255, 255, 255, 0.1),
    inset 0 -2px 4px rgba(0, 0, 0, 0.1),
    0 2px 8px rgba(0, 0, 0, 0.1);
  
  // Brilho realista
  &::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    right: 2px;
    height: 40%;
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.2) 0%, 
      rgba(255, 255, 255, 0.1) 50%,
      transparent 100%
    );
    border-radius: 2px;
    pointer-events: none;
  }
  
  // Reflexo dinâmico
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, 
      transparent 0%,
      rgba(255, 255, 255, 0.05) 45%,
      rgba(255, 255, 255, 0.1) 50%,
      rgba(255, 255, 255, 0.05) 55%,
      transparent 100%
    );
    border-radius: 4px;
    animation: reflectionSweep 4s ease-in-out infinite;
    pointer-events: none;
  }
  
  @media (max-width: 768px) {
    border-radius: 3px;
  }
  
  @media (max-width: 480px) {
    border-radius: 2px;
  }
}

@keyframes reflectionSweep {
  0%, 100% { 
    transform: translateX(-100%) skewX(-25deg);
    opacity: 0;
  }
  50% { 
    transform: translateX(100%) skewX(-25deg);
    opacity: 0.6;
  }
}

// Cube faces positioning - 3D realista
.cubeFace.front {
  transform: rotateY(0deg) translateZ(100px);
  
  @media (max-width: 768px) {
    transform: rotateY(0deg) translateZ(75px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(0deg) translateZ(60px);
  }
}

.cubeFace.back {
  transform: rotateY(180deg) translateZ(100px);
  
  @media (max-width: 768px) {
    transform: rotateY(180deg) translateZ(75px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(180deg) translateZ(60px);
  }
}

.cubeFace.right {
  transform: rotateY(90deg) translateZ(100px);
  
  @media (max-width: 768px) {
    transform: rotateY(90deg) translateZ(75px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(90deg) translateZ(60px);
  }
}

.cubeFace.left {
  transform: rotateY(-90deg) translateZ(100px);
  
  @media (max-width: 768px) {
    transform: rotateY(-90deg) translateZ(75px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(-90deg) translateZ(60px);
  }
}

.cubeFace.top {
  transform: rotateX(90deg) translateZ(100px);
  
  @media (max-width: 768px) {
    transform: rotateX(90deg) translateZ(75px);
  }
  
  @media (max-width: 480px) {
    transform: rotateX(90deg) translateZ(60px);
  }
}

.cubeFace.bottom {
  transform: rotateX(-90deg) translateZ(100px);
  
  @media (max-width: 768px) {
    transform: rotateX(-90deg) translateZ(75px);
  }
  
  @media (max-width: 480px) {
    transform: rotateX(-90deg) translateZ(60px);
  }
}

// Cores realistas de cubo mágico em escala de cinzas
.cubeFace.front {
  background: linear-gradient(135deg, rgba(240, 240, 240, 0.1), rgba(220, 220, 220, 0.05));
  
  .cubeSquare {
    background: linear-gradient(135deg, 
      rgba(30, 30, 40, 0.95) 0%, 
      rgba(20, 20, 30, 0.9) 50%,
      rgba(10, 10, 20, 0.85) 100%
    );
    
    // Centro da face (sempre fixo)
    &:nth-child(5) {
      background: linear-gradient(135deg, 
        rgba(40, 40, 50, 1) 0%, 
        rgba(35, 35, 45, 0.95) 100%
      );
      box-shadow: 
        inset 0 3px 6px rgba(255, 255, 255, 0.1),
        inset 0 -3px 6px rgba(0, 0, 0, 0.1),
        0 3px 12px rgba(0, 0, 0, 0.15);
      border: 2px solid rgba(79, 140, 255, 0.3);
    }
  }
}

.cubeFace.back {
  background: linear-gradient(135deg, rgba(180, 180, 180, 0.1), rgba(160, 160, 160, 0.05));
  
  .cubeSquare {
    background: linear-gradient(135deg, 
      rgba(200, 200, 200, 0.9) 0%, 
      rgba(190, 190, 190, 0.85) 50%,
      rgba(180, 180, 180, 0.8) 100%
    );
    
    &:nth-child(5) {
      background: linear-gradient(135deg, 
        rgba(210, 210, 210, 0.95) 0%, 
        rgba(190, 190, 190, 0.9) 100%
      );
      border: 2px solid rgba(79, 140, 255, 0.2);
    }
  }
}

.cubeFace.right {
  background: linear-gradient(135deg, rgba(220, 220, 220, 0.1), rgba(200, 200, 200, 0.05));
  
  .cubeSquare {
    background: linear-gradient(135deg, 
      rgba(230, 230, 230, 0.9) 0%, 
      rgba(220, 220, 220, 0.85) 50%,
      rgba(210, 210, 210, 0.8) 100%
    );
    
    &:nth-child(5) {
      background: linear-gradient(135deg, 
        rgba(240, 240, 240, 0.95) 0%, 
        rgba(220, 220, 220, 0.9) 100%
      );
      border: 2px solid rgba(79, 140, 255, 0.25);
    }
  }
}

.cubeFace.left {
  background: linear-gradient(135deg, rgba(190, 190, 190, 0.1), rgba(170, 170, 170, 0.05));
  
  .cubeSquare {
    background: linear-gradient(135deg, 
      rgba(210, 210, 210, 0.9) 0%, 
      rgba(200, 200, 200, 0.85) 50%,
      rgba(190, 190, 190, 0.8) 100%
    );
    
    &:nth-child(5) {
      background: linear-gradient(135deg, 
        rgba(220, 220, 220, 0.95) 0%, 
        rgba(200, 200, 200, 0.9) 100%
      );
      border: 2px solid rgba(79, 140, 255, 0.2);
    }
  }
}

.cubeFace.top {
  background: linear-gradient(135deg, rgba(250, 250, 250, 0.1), rgba(240, 240, 240, 0.05));
  
  .cubeSquare {
    background: linear-gradient(135deg, 
      rgba(250, 250, 250, 0.95) 0%, 
      rgba(245, 245, 245, 0.9) 50%,
      rgba(240, 240, 240, 0.85) 100%
    );
    
    &:nth-child(5) {
      background: linear-gradient(135deg, 
        rgba(40, 40, 50, 1) 0%, 
        rgba(30, 30, 40, 0.95) 100%
      );
      box-shadow: 
        inset 0 4px 8px rgba(255, 255, 255, 0.1),
        inset 0 -2px 4px rgba(0, 0, 0, 0.1),
        0 4px 16px rgba(0, 0, 0, 0.1);
      border: 2px solid rgba(79, 140, 255, 0.3);
    }
  }
}

.cubeFace.bottom {
  background: linear-gradient(135deg, rgba(160, 160, 160, 0.1), rgba(140, 140, 140, 0.05));
  
  .cubeSquare {
    background: linear-gradient(135deg, 
      rgba(180, 180, 180, 0.9) 0%, 
      rgba(170, 170, 170, 0.85) 50%,
      rgba(160, 160, 160, 0.8) 100%
    );
    
    &:nth-child(5) {
      background: linear-gradient(135deg, 
        rgba(190, 190, 190, 0.95) 0%, 
        rgba(170, 170, 170, 0.9) 100%
      );
      border: 2px solid rgba(79, 140, 255, 0.2);
    }
  }
}

// Animação de movimentos de camadas simulando resolução
.rubiksCube {
  .cubeFace.front {
    animation: layerFrontMove 24s ease-in-out infinite;
  }
  
  .cubeFace.right {
    animation: layerRightMove 24s ease-in-out infinite;
  }
  
  .cubeFace.top {
    animation: layerTopMove 24s ease-in-out infinite;
  }
}

@keyframes layerFrontMove {
  0%, 15% { transform: rotateY(0deg) translateZ(100px); }
  16%, 20% { transform: rotateY(0deg) translateZ(100px) rotateZ(90deg); }
  21%, 35% { transform: rotateY(0deg) translateZ(100px) rotateZ(0deg); }
  50%, 65% { transform: rotateY(0deg) translateZ(100px); }
  66%, 70% { transform: rotateY(0deg) translateZ(100px) rotateZ(-90deg); }
  71%, 100% { transform: rotateY(0deg) translateZ(100px) rotateZ(0deg); }
}

@keyframes layerRightMove {
  0%, 8% { transform: rotateY(90deg) translateZ(100px); }
  9%, 13% { transform: rotateY(90deg) translateZ(100px) rotateX(90deg); }
  14%, 28% { transform: rotateY(90deg) translateZ(100px) rotateX(0deg); }
  40%, 55% { transform: rotateY(90deg) translateZ(100px); }
  56%, 60% { transform: rotateY(90deg) translateZ(100px) rotateX(-90deg); }
  61%, 100% { transform: rotateY(90deg) translateZ(100px) rotateX(0deg); }
}

@keyframes layerTopMove {
  0%, 22% { transform: rotateX(90deg) translateZ(100px); }
  23%, 27% { transform: rotateX(90deg) translateZ(100px) rotateY(90deg); }
  28%, 42% { transform: rotateX(90deg) translateZ(100px) rotateY(0deg); }
  58%, 73% { transform: rotateX(90deg) translateZ(100px); }
  74%, 78% { transform: rotateX(90deg) translateZ(100px) rotateY(-90deg); }
  79%, 100% { transform: rotateX(90deg) translateZ(100px) rotateY(0deg); }
}

// Efeito de resolução - peças se organizam
@keyframes pieceResolve {
  0% { 
    transform: scale(0.95) rotate(5deg);
    opacity: 0.8;
  }
  50% { 
    transform: scale(1.05) rotate(0deg);
    opacity: 1;
  }
  100% { 
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

// Animação das peças durante resolução
.rubiksCube:not(:hover) .cubeSquare:not(:nth-child(5)) {
  animation: pieceResolve 2s ease-in-out infinite;
  animation-delay: calc(var(--piece-index, 0) * 0.1s);
}



// Loading and Empty States
.loadingSpinner {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 400px;
  
  @media (max-width: 600px) {
    height: 250px;
  }
}

.spinner {
  width: 50px;
  height: 50px;
  border: 3px solid rgba(79, 140, 255, 0.1);
  border-top: 3px solid $color-primary;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.emptyState {
  text-align: center;
  padding: 4rem 2rem;
  height: 400px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  
  @media (max-width: 600px) {
    padding: 3rem 1rem;
    height: 250px;
  }
}

.emptyIcon {
  font-size: 4rem;
  margin-bottom: 1rem;
  opacity: 0.5;
  
  @media (max-width: 600px) {
    font-size: 3rem;
  }
}

.emptyText {
  font-size: 1.5rem;
  color: $color-text-dark;
  font-family: $font-title;
  margin-bottom: 0.5rem;
  
  @media (max-width: 600px) {
    font-size: 1.2rem;
  }
}

.emptySubtext {
  color: $color-gray-dark;
  font-size: 1rem;
  
  @media (max-width: 600px) {
    font-size: 0.9rem;
  }
}

// Panoramic effect enhancements
.panoramaContainer {
  // Add perspective for 3D effect
  perspective: 1000px;
  
  .panoramaTrack {
    transform-style: preserve-3d;
  }
  
  .panoramaSlide {
    // Subtle 3D rotation for panoramic effect
    transform-origin: center center;
    
    &:not(:first-child) {
      margin-left: -10px; // Slight overlap for seamless panoramic effect
    }
  }
}

// Enhanced Auto-play indicator
.autoPlayIndicator {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: rgba(0, 0, 0, 0.8);
  color: rgba(255, 255, 255, 0.9);
  padding: 0.6rem 1.2rem;
  border-radius: 25px;
  font-size: 0.85rem;
  font-weight: 500;
  z-index: 15;
  -webkit-backdrop-filter: blur(15px);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(79, 140, 255, 0.15);
  box-shadow: 0 2px 10px rgba(79, 140, 255, 0.1);
  transition: all 0.3s ease;
  
  &:hover {
    background: rgba(0, 0, 0, 0.9);
    box-shadow: 0 4px 20px rgba(79, 140, 255, 0.15);
    transform: scale(1.05);
  }
  
  @media (max-width: 600px) {
    font-size: 0.75rem;
    padding: 0.5rem 1rem;
  }
}

// Auto-play indicator classes
.autoPlayIcon {
  display: inline-block;
  margin-right: 8px;
}

// Status container and elements
.statusContainer {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 8px;
}

.statusDot {
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin-right: 6px;
}

.statusText {
  font-size: 14px;
  font-weight: 600;
}

// Status specific colors
.status-completed {
  &.statusDot {
    background-color: #10b981;
  }
  &.statusText {
    color: #10b981;
  }
}

.status-in-progress {
  &.statusDot {
    background-color: #f59e0b;
  }
  &.statusText {
    color: #f59e0b;
  }
}

.status-coming-soon {
  &.statusDot {
    background-color: #8b5cf6;
  }
  &.statusText {
    color: #8b5cf6;
  }
}

// Performance optimizations
.floatingElement {
  will-change: transform;
  backface-visibility: hidden;
}

.panoramaSlide {
  will-change: transform;
  backface-visibility: hidden;
}

.statBar {
  will-change: transform;
  backface-visibility: hidden;
}