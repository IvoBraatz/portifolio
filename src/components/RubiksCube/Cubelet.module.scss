// Estilos para o componente Cubelet individual
.cubelet {
  position: absolute;
  width: 60px;
  height: 60px;
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
  transform-origin: 30px 30px 30px; // Centro do cubelet
  backface-visibility: visible; // Garantir visibilidade 3D
  
  &.animating {
    transition: transform 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94); // Animação mais lenta e suave
  }
  
  // Responsividade para diferentes tamanhos
  @media (max-width: 1024px) {
    width: 53px;
    height: 53px;
    transform-origin: 26.5px 26.5px 26.5px;
  }
  
  @media (max-width: 768px) {
    width: 47px;
    height: 47px;
    transform-origin: 23.5px 23.5px 23.5px;
  }
  
  @media (max-width: 480px) {
    width: 40px;
    height: 40px;
    transform-origin: 20px 20px 20px;
  }
  
  @media (max-width: 360px) {
    width: 33px;
    height: 33px;
    transform-origin: 16.5px 16.5px 16.5px;
  }
}

.face {
  position: absolute;
  width: 60px;
  height: 60px;
  border: 2px solid #222;
  box-sizing: border-box;
  opacity: 1;
  border-radius: 4px;
  backface-visibility: visible;
  transform-style: preserve-3d;
  z-index: 1;
  
  // Adicionar efeito 3D básico
  &::after {
    content: '';
    position: absolute;
    inset: 2px;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.3) 0%, transparent 100%);
    border-radius: 2px;
    pointer-events: none;
  }
  
  // Responsividade para diferentes tamanhos
  @media (max-width: 1024px) {
    width: 53px;
    height: 53px;
    border-width: 1.8px;
    border-radius: 3.5px;
    
    &::after {
      inset: 1.8px;
      border-radius: 1.7px;
    }
  }
  
  @media (max-width: 768px) {
    width: 47px;
    height: 47px;
    border-width: 1.5px;
    border-radius: 3px;
    
    &::after {
      inset: 1.5px;
      border-radius: 1.5px;
    }
  }
  
  @media (max-width: 480px) {
    width: 40px;
    height: 40px;
    border-width: 1.2px;
    border-radius: 2.5px;
    
    &::after {
      inset: 1.2px;
      border-radius: 1.2px;
    }
  }
  
  @media (max-width: 360px) {
    width: 33px;
    height: 33px;
    border-width: 1px;
    border-radius: 2px;
    
    &::after {
      inset: 1px;
      border-radius: 1px;
    }
  }
}

// Posicionamento das faces com melhor visibilidade e z-index corrigido
.front {
  transform: rotateY(0deg) translateZ(30px);
  z-index: 10;
  backface-visibility: visible;
  
  @media (max-width: 1024px) {
    transform: rotateY(0deg) translateZ(26.5px);
  }
  
  @media (max-width: 768px) {
    transform: rotateY(0deg) translateZ(23.5px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(0deg) translateZ(20px);
  }
  
  @media (max-width: 360px) {
    transform: rotateY(0deg) translateZ(16.5px);
  }
}

.back {
  transform: rotateY(180deg) translateZ(30px);
  z-index: 10;
  backface-visibility: visible;
  
  @media (max-width: 1024px) {
    transform: rotateY(180deg) translateZ(26.5px);
  }
  
  @media (max-width: 768px) {
    transform: rotateY(180deg) translateZ(23.5px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(180deg) translateZ(20px);
  }
  
  @media (max-width: 360px) {
    transform: rotateY(180deg) translateZ(16.5px);
  }
}

.right {
  transform: rotateY(90deg) translateZ(30px);
  z-index: 10;
  backface-visibility: visible;
  
  @media (max-width: 1024px) {
    transform: rotateY(90deg) translateZ(26.5px);
  }
  
  @media (max-width: 768px) {
    transform: rotateY(90deg) translateZ(23.5px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(90deg) translateZ(20px);
  }
  
  @media (max-width: 360px) {
    transform: rotateY(90deg) translateZ(16.5px);
  }
}

.left {
  transform: rotateY(-90deg) translateZ(30px);
  z-index: 10;
  backface-visibility: visible;
  
  @media (max-width: 1024px) {
    transform: rotateY(-90deg) translateZ(26.5px);
  }
  
  @media (max-width: 768px) {
    transform: rotateY(-90deg) translateZ(23.5px);
  }
  
  @media (max-width: 480px) {
    transform: rotateY(-90deg) translateZ(20px);
  }
  
  @media (max-width: 360px) {
    transform: rotateY(-90deg) translateZ(16.5px);
  }
}

.top {
  transform: rotateX(90deg) translateZ(30px);
  z-index: 10;
  backface-visibility: visible;
  
  @media (max-width: 1024px) {
    transform: rotateX(90deg) translateZ(26.5px);
  }
  
  @media (max-width: 768px) {
    transform: rotateX(90deg) translateZ(23.5px);
  }
  
  @media (max-width: 480px) {
    transform: rotateX(90deg) translateZ(20px);
  }
  
  @media (max-width: 360px) {
    transform: rotateX(90deg) translateZ(16.5px);
  }
}

.bottom {
  transform: rotateX(-90deg) translateZ(30px);
  z-index: 10;
  backface-visibility: visible;
  
  @media (max-width: 1024px) {
    transform: rotateX(-90deg) translateZ(26.5px);
  }
  
  @media (max-width: 768px) {
    transform: rotateX(-90deg) translateZ(23.5px);
  }
  
  @media (max-width: 480px) {
    transform: rotateX(-90deg) translateZ(20px);
  }
  
  @media (max-width: 360px) {
    transform: rotateX(-90deg) translateZ(16.5px);
  }
}

// Efeitos visuais específicos para cada face - melhorados
.front {
  box-shadow: 0 0 20px rgba(0, 155, 72, 0.4);
}

.back {
  box-shadow: 0 0 20px rgba(0, 81, 186, 0.4);
}

.right {
  box-shadow: 0 0 20px rgba(255, 88, 0, 0.4);
}

.left {
  box-shadow: 0 0 20px rgba(196, 30, 58, 0.4);
}

.top {
  box-shadow: 0 0 20px rgba(255, 213, 0, 0.4);
}

.bottom {
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.4);
}

// Otimizações para performance em dispositivos móveis
@media (max-width: 768px) {
  .cubelet {
    // Reduzir a duração da animação em mobile
    &.animating {
      transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }
  }
  
  .face {
    // Reduzir sombras em mobile para melhor performance
    box-shadow: none !important;
    
    &::after {
      // Simplificar o gradiente
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, transparent 100%);
    }
  }
}

// Otimizações extremas para dispositivos pequenos
@media (max-width: 480px) {
  .cubelet {
    &.animating {
      transition: transform 0.6s ease-out;
    }
  }
  
  .face {
    // Remover completamente efeitos extras
    &::after {
      display: none;
    }
  }
}

// Reduzir animações para usuários que preferem menos movimento
@media (prefers-reduced-motion: reduce) {
  .cubelet {
    &.animating {
      transition: none;
    }
  }
}
